###
# lemp-stack-compose
# LEMP Stack with Docker Compose
# Copyright (c) 2017 Volkan Kucukcakar
#
# This file is part of lemp-stack-compose.
#
# lemp-stack-compose is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# lemp-stack-compose is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This copyright notice and license must be retained in all files and derivative works.
###


###
# Container		: server-db
# Mount point	: /etc/mysql/conf.d/mysql.cnf
# Description	: Shared MySql configuration file. Edit according to your needs.
###


[mysqld]

##
# Some settings can be used to tune mysql. Refer to https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html
##


##
# Number of connections and threads / Memory management
##


# The maximum permitted number of simultaneous client connections. (default = 151)
#max_connections = 151

# The maximum number of simultaneous connections permitted to any given MySQL user account. (default = 0)
#max_user_connections = 0

# Do not start more than this number of threads to handle INSERT DELAYED statements. (default = 20)
#max_delayed_threads = 20

# How many threads the server should cache for reuse. (default = 0)
#thread_cache_size = 0

# The number of open tables for all threads. (default = 2000)
#table_open_cache = 2000


##
# Cache
##

# The size in bytes of the buffer pool, the memory area where InnoDB caches table and index data. 
# The total allocated space is approximately 10% greater than the specified buffer pool size. (default = 128M)
# This is probably the most important setting currently. Tune it according to total RAM.
#innodb_buffer_pool_size = 128M

# Index blocks for MyISAM tables are buffered and are shared by all threads. (default = 8M)
#key_buffer_size = 8M

#The stack size for each thread. (default = 256K)
#thread_stack = 256K

# Do not cache results that are larger than this number of bytes. (default = 1M)
#query_cache_limit = 1M

# The amount of memory allocated for caching query results. (default = 1M)
#query_cache_size = 1M

# Set the query cache type. (default = 0) (disabled)
#query_cache_type = 0



##
# Stability (See php error logs)
##


# The maximum size of one packet. You must increase this value if you are using large BLOB columns or long strings. It should be as big as the largest BLOB you want to use. (default = 4M)
#max_allowed_packet = 4M

# The number of seconds the server waits for activity on an interactive connection before closing it. (default = 28800)
#interactive_timeout = 28800

# The number of seconds the server waits for activity on a noninteractive connection before closing it. (default = 28800)
#wait_timeout = 28800

# The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake. (default = 10)
#connect_timeout = 10

# The length of time in seconds an InnoDB transaction waits for a row lock before giving up. (default = 50)
#innodb_lock_wait_timeout = 50

# This option is used to disable deadlock detection. On high concurrency systems, deadlock detection can cause a 
# slowdown when numerous threads wait for the same lock. At times, it may be more efficient to disable deadlock 
# detection and rely on the innodb_lock_wait_timeout setting for transaction rollback when a deadlock occurs.  (default = ON)
#innodb_deadlock_detect = ON

# The number of seconds to wait for more data from a connection before aborting the read. (default = 30)
#net_read_timeout = 30

# The number of seconds to wait for a block to be written to a connection before aborting the write. (default = 60)
#net_write_timeout = 60

# If a read or write on a communication port is interrupted, retry this many times before giving up. (default = 10)
net_retry_count = 10

# The number of seconds to wait for more data from a master/slave connection before aborting the read. (default = 60) (MySQL >= 5.7.7)
#slave_net_timeout = 60


